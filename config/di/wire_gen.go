// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/ReqqQ/eventpulse-go/src/infrastructure/user/factory"
	"github.com/ReqqQ/eventpulse-go/src/ui/routes"
	"github.com/ReqqQ/eventpulse-user-go/src/app/user/command"
	"github.com/ReqqQ/eventpulse-user-go/src/app/user/handler"
	"github.com/ReqqQ/eventpulse-user-go/src/app/user/query"
	"github.com/ReqqQ/eventpulse-user-go/src/app/user/repository"
	repository3 "github.com/ReqqQ/eventpulse-user-go/src/domain/facebook/repository"
	"github.com/ReqqQ/eventpulse-user-go/src/domain/user/entity"
	"github.com/ReqqQ/eventpulse-user-go/src/domain/user/service/user"
	repository2 "github.com/ReqqQ/eventpulse-user-go/src/infrastructure/facebook/repository"
	"github.com/ReqqQ/eventpulse-user-go/src/infrastructure/users/dto"
	repository4 "github.com/ReqqQ/eventpulse-user-go/src/infrastructure/users/repository"
	"github.com/ReqqQ/eventpulse-user-go/src/shared"
	"github.com/google/wire"
)

// Injectors from di_container.go:

func InitializeAppFacebookRepository() repository.FacebookRepository {
	apiFacebookRepositoryImpl := repository2.BuildApiFacebookRepository()
	facebookRepository := repository2.BuildAppFacebookRepository(apiFacebookRepositoryImpl)
	return facebookRepository
}

func InitializeDomainFacebookRepository() repository3.FacebookRepository {
	apiFacebookRepositoryImpl := repository2.BuildApiFacebookRepository()
	facebookRepository := repository2.BuildDomainFacebookRepository(apiFacebookRepositoryImpl)
	return facebookRepository
}

func InitDIContainer() routes.Routes {
	entityFactory := entity.BuildFactory()
	userRepository := repository4.BuildUserRepository(entityFactory)
	facebookRepository := InitializeAppFacebookRepository()
	service := user.BuildService(userRepository, entityFactory)
	userDTOFactory := dto.BuildUserFactory()
	userQueryHandler := query.BuildUserQueryHandler(userRepository, facebookRepository, service, userDTOFactory)
	repositoryFacebookRepository := InitializeDomainFacebookRepository()
	userCommandHandler := command.BuildCommandQueryHandler(repositoryFacebookRepository, service)
	userBus := handler.BuildUserBus(userQueryHandler, userCommandHandler)
	bus := shared.BuildBus(userBus)
	userFactory := factory.BuildFactory()
	routesRoutes := routes.BuildRoutes(bus, userFactory)
	return routesRoutes
}

// di_container.go:

var buildUserApp = wire.NewSet(query.BuildUserQueryHandler, command.BuildCommandQueryHandler, repository4.BuildUserRepository, entity.BuildFactory, repository2.BuildApiFacebookRepository, user.BuildService, dto.BuildUserFactory, InitializeAppFacebookRepository,
	InitializeDomainFacebookRepository,
)
